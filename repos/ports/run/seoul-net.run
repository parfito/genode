#
# \brief  Seoul on Genode - for testing network
# \author Alexander Boettcher
# \date   2013-06-11
#
# This run script starts the Seoul VMM booting from a multiboot image.
# It assumes that the module files are present at '<build-dir>/bin/'
#

set use_multiboot     1
set use_genode_iso    0
set use_model_ahci    0
set use_model_ide     0

set use_block_vdi     0
set use_block_ram     0
set use_block_sata    0

set use_part_block    0

set use_nic_session   1
set use_nic_bridge    0

set use_usb           0

set use_framebuffer   1
set use_fancy_stuff   0
set use_top           0

set memory_vmm_vm     "256M"

set vcpus_to_be_used  1

set multiboot_files {
		<rom name="munich"/>
		<rom name="bzImage-5.4.3" cmdline="root=/dev/ram0 earlyprintk=ttyS0 text"/>
		<rom name="core.gz"/>
}

set guest_os_binaries { munich bzImage-5.4.3 core.gz}
set sha1_os_binaries  { 7ecb4ba634a0ecfa6429418ea73490d6f65afead 3133f5fc8a3d86bc11570959802e5ae63a7842dd 876610d6fd0ed335f57a886f596c221432c95320}

#
# Download demo kernel, image and
# munich (part of Oslo framework http://os.inf.tu-dresden.de/~kauer/oslo)
#
set uri "http://genode.org/files/seoul"

foreach binary $guest_os_binaries {
	if {![file exists bin/$binary]} {
		exec mkdir -p bin
		puts "Download file bin/$binary"
		exec >& /dev/null wget -c -O bin/$binary $uri/$binary
	}
}

source ${genode_dir}/repos/ports/run/seoul.inc

#append qemu_args " -cpu phenom "
append qemu_args " -net nic,model=e1000 "

run_genode_until forever
